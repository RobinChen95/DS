1、写好if...else if的逻辑关系很重要，全用if容易使数组越界，详见Insertion*;
2、A-Z是0x41-0x5a,a-z是0x61-7a,数字是0x30-0x39;
3、基本类型，值就直接保存在变量中；而引用类型，变量中保存的只是实际对象的地址。
   所以打印的时候直接打印字符串会直接打印一个地址而不是其内容
   对于基本类型，赋值运算符会直接改变变量的值，原来的值被覆盖掉。
   对于引用类型，赋值运算符会改变引用中所保存的地址，原来的地址被覆盖掉。但是原来的对象不会被改变。
   没有被任何引用所指向的对象是垃圾，会被垃圾回收器回收。
4、注意在结点的实际使用过程中容易出现java.lang.NullPointerException，如在Palindrome中的reverseList就是一个会报错的方法
5、递归方法在返回时是一次返回一个函数调用，而不是所有调用一次返回
6、除以二可以用>>1表示;左右相加L+R应该表示为((R-l) >> L)+l，详见LeetCode第一个错误的版本
7、递归在某些情况下会导致实践复杂度偏大，一般用动态规划降低复杂度。
8、在某些时候可以用Integer.MAX_VALUE表示最大的整型数，最小数同理。
9、栈的peek()操作可以不取出元素，而获得顶部元素。
10、数组下标从零开始是为了方便取得其物理地址，例如有指针base，其第一个元素的地址是0X4+base，其余同理。